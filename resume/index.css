.clearfix::after{
    content: '';
    display: block;
    clear: both;
}

body{
    margin: 0;/*消除body默认有8px的margin*/
    background-color: #efefef;
}

*{ /*消除所有元素的默认边距*/
    margin: 0;
    padding: 0;
}

a{
    text-decoration: none; /*去掉下划线*/
}

hr{ /*重写hr样式*/
    height: 0;
    border: none;
    border-top: 1px solid #dedede;
}

.icon {
    width: 1em; height: 1em;
    vertical-align: -0.15em;
    fill: currentColor;
    overflow: hidden;
 }

.topNavBar{
    padding-top: 20px; /*使navbar整体向下移动*/
    padding-bottom: 20px;/*为了使上下空隙对称*/
    /* padding-left: 16px;
    padding-right: 16px; */
    /* 上面代码可以简化为 padding: 20px 16px 20px 16px; (上右下左) */
    position: fixed;/* 使其脱离文档流 */
    width: 100%; /*不到万不得已不用width，因为这里脱离文档流后元素宽度会内缩，所以只能强制宽度占满*/
    /* 因为宽度已经100%，再加上padding-left/right的16px就会超出宽度，所以在这里取消左右边距，再单独加一个div来设置左右边距 */
    
}

.topNavBar .topNavBar-inner{
    padding: 0 16px 0 16px; /*因为width的bug而新加的div，专门设置nav的左右边距以实现原来padding: 20px 16px 20px 16px 的效果*/
}

.topNavBar nav{
    padding-top: 7px;
}

.topNavBar nav>ul{
    list-style: none; /*消除列表的bullet point*/
    margin: 0; /*margin:外边距 除了div和span其他标签都有默认样式*/
    padding: 0; /*padding:内边距 消除margin和padding的默认样式*/
}

.topNavBar nav>ul>li{
    float: left;
    margin-left: 17px;
    margin-right: 17px; /*经测量两个li元素之间有34px的间距，所以每个li元素左右分别给17px*/
}

.topNavBar nav>ul>li>a{
    font-size: 14px;
    color: #9A9DA1;
    font-weight: bold; /*字体加粗*/
    border-bottom: 3px solid transparent; /*先占位，因为a:hover加边框后两元素间距增加，产生一个抖动效果，为了消除这个效果就先加一个透明边框*/
    padding-top: 5px;
    padding-bottom: 5px;/*为a增加上下边距，使下边框与a元素有一定距离*/
    display: block;/*加入边距后li的高度<a的高度，li没有包住a，加入block后解决该问题*/
}

.topNavBar nav>ul>li>a:hover{ /*hover:鼠标悬停*/
    border-bottom: 3px solid rgb(244, 135, 133); /*1像素的实心下边框*/
}
/*logo和nav两个class之前高都为33，现在为了使nav的底线与logo对齐，分别给两个元素再加7px到40的高，再通过调整padding-top/bottom来使两个元素高度对齐*/
.topNavBar .logo{
    font-size: 24px;
    font-family: "arial black";
    padding-top: 2px;
    padding-bottom: 5px;
}

.topNavBar .logo .rs{
    margin-right: 4px;
    color: #5fd0ce;
}

.topNavBar .logo .card{
    color: #9A9DA2;
}

.banner{
    background-image: url(./img/cover.jpg);
    height: 515px; /* 不到万不得已不用height，因为这里的div里没有文档流元素，所以只能自己设置高度 */
    background-position: center center; /*背景图片居中 第一个center是水平方向 第二个center是垂直方向*/
    background-size: cover; /*背景图片自适应大小*/
}

.banner .mask{
    height: 515px;
    background-color: rgba(0,0,0,0.5) /*设置黑色蒙版 0.8是透明程度*/
}

.userCard{
    background-color: #FFFFFF;
    /* border: 1px solid red; */
    max-width: 940px;/*用最大宽度，当屏幕小于最大宽度时元素会自适应，如何只用 width 就不会自适应*/
    margin-right: auto;
    margin-left: auto;/*如果一个 div 设置了宽度，想让该div居中只要 margin-right/left: auto 就可以了*/
}

.userCard .greeting{
    background-color: #c88ef7;
    color: white;
    display: inline-block;
    padding: 4px 16px;
    position: relative;/*给父元素一个相对定位，让 absolute子元素根据父元素定位*/
}

.userCard .greeting .triangle{
    display: block;
    border: 10px solid transparent;
    width: 0px;
    left: 4px;
    border-left-color: #c88ef7;
    border-top-width: 0px;
    position: absolute;/*绝对定位--脱离文档流但是仍然根据父元素定位*/
    top: 100%; /*让小三角正好在hello的边框下，距上面100%的高度*/
}

.userCard .pictureAndText{
    padding: 50px;
}

.userCard .picture{
    float: left;
}

.userCard .profile{
    float: left; /*都在left是因为picture和profile要挨在一起，都是靠左的*/
    margin-left: 65px;
    width: 470px; /*hr分割线的宽度，注意宽度一定不能超过容器，自己调节宽度来适应容器*/
}

.userCard .profile h1{
    margin-top: 26px;
}

.userCard .profile hr{
    margin: 20px 0; /*上下20 左右0*/
}

.userCard dl dt,
.userCard dl dd{
    float: left;
    padding: 5px 0;
}
.userCard dl dt{
    width: 30%;
    font-weight: bold;
}
.userCard dl dd{
    width: 70%;
    color: #9a9da1;
}

.userCard>footer.social-media{
    background-color: #c88ef7;
    text-align: center;
}

.userCard>footer.social-media>a{
    display: inline-block;
    border-radius: 50%; /*圆形*/
    line-height: 30px;
    padding: 5px 5px;
    margin: 16px;
}

.userCard>footer.social-media>a:hover{
    background: #b484dbed;
}

.userCard svg{
    width: 30px;
    height: 30px;
    fill: white;
    vertical-align: top;
}
